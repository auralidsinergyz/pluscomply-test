var learnDashProPanel = jQuery(function (e) { var r, t, a = {}, o = { type: null, id: null, courseStatus: null, search: null, groups: "", courses: "", users: "", time_start: "", time_end: "", dateStart: "", dateEnd: "", reporting_pager: {}, activity_pager: {} }, n = []; function l(r, a, n) { if (function (e) { if (void 0 !== ld_propanel_settings.is_dashboard && "1" == ld_propanel_settings.is_dashboard) { var r = e.parents(".postbox").find(".loading"); if (r.length) return; var t = e.parents(".postbox").find("h2.hndle"); void 0 !== t && t.append('<img src="' + ld_propanel_settings.spinner_admin_img + '" class="loading">') } else if (jQuery("body").hasClass(".ld-propanel-full-page")) { var r = e.prev("h2").find(".loading"); if (r.length) return; var t = e.prev("h2"); void 0 !== t && t.append('<img src="' + ld_propanel_settings.spinner_admin_img + '" class="loading">') } else e.prepend('<img src="' + ld_propanel_settings.spinner_admin_img + '" class="loading">') }(r), ("activity" == a || "activity_rows" == a) && (void 0 === n && (n = {}), jQuery("#dashboard-widgets").length)) { var l = jQuery("select#ld-propanel-pagesize").val(); void 0 !== l && (n.per_page = l) } e.when(e.ajax({ url: ld_propanel_settings.ajaxurl, method: "get", dataType: "json", data: { action: "learndash_propanel_template", template: a, filters: o, container_type: t, args: n, nonce: ld_propanel_settings.nonce, lang: ld_propanel_settings.lang } })).done(function (t) { !function (e) { setTimeout(function () { void 0 !== ld_propanel_settings.is_dashboard && "1" == ld_propanel_settings.is_dashboard ? e.parents(".postbox").find(".loading").remove() : jQuery("body").hasClass(".ld-propanel-full-page") ? e.prev("h2").find(".loading").remove() : e.find(".loading").remove() }, 500) }(r), t.hasOwnProperty("success") && (void 0 !== t.data.output.rows_html ? r.html(t.data.output.rows_html) : void 0 !== t.data.output && r.html(t.data.output), e(document).trigger("proPanel.templateLoaded", [a]), e(window).trigger("resize")) }) } function p() { if (void 0 !== a.reporting) { r = a.reporting.find(".tablesorter"); jQuery("select#ld-propanel-pagesize").val(), jQuery("select#ld-propanel-pagesize").val(); e.when(e.ajax({ url: ld_propanel_settings.ajaxurl, method: "get", dataType: "json", data: { action: "learndash_propanel_reporting_get_result_rows", nonce: ld_propanel_settings.nonce, filters: o, container_type: t, lang: ld_propanel_settings.lang } })).done(function (t) { void 0 !== t.rows_html && (r.find("tbody").html(t.rows_html), void 0 === a.filtering && (r.find("thead th.ld-propanel-reporting-col-checkbox").hide(), r.find("tbody td.ld-propanel-reporting-col-checkbox").hide())), e(window).trigger("resize"), void 0 !== t.pager ? (o.reporting_pager = t.pager, e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info").show(), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.current_page").html(t.pager.current_page), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.total_pages").html(t.pager.total_pages), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.total_items").html(t.pager.total_items), 1 == parseInt(t.pager.current_page) ? (e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.first").attr("disabled", !0), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.prev").attr("disabled", !0)) : (e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.first").attr("disabled", !1), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.prev").attr("disabled", !1)), parseInt(t.pager.current_page) == parseInt(t.pager.total_pages) ? (e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.last").attr("disabled", !0), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.next").attr("disabled", !0)) : (e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.last").attr("disabled", !1), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info button.next").attr("disabled", !1))) : (o.reporting_pager = {}, e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.current_page").html("0"), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.total_pages").html("0"), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info span.pagedisplay span.total_items").html("0"), e(".ld-propanel-widget-reporting .pager .ld-propanel-reporting-pager-info").hide()), _(), f(), e(document).trigger("proPanel.reportingTableUpdated") }) } } function i(e) { return { url: ld_propanel_settings.ajaxurl, dataType: "json", method: "get", delay: 1e3, cache: !0, data: function (r) { return { action: "learndash_propanel_filters_search", filter_key: e, filters: o, search: r.term || "", page: r.page || 1, nonce: ld_propanel_settings.nonce, lang: ld_propanel_settings.lang } }, processResults: function (e, r) { return r.page = r.page || 1, { results: e.data.items, pagination: { more: 10 * r.page < e.data.total } } } } } function d(t) { if (void 0 !== t) { if ("user" == o.type && (n = []).push(e(".user.select2").val()), "course" == o.type || "group" == o.type) { var a = t.currentTarget, l = e(a).attr("data-user-id"), p = !1; if (e(t.currentTarget).is(":checked")) { p = !0; r.find('input.ld-propanel-report-checkbox[data-user-id="' + l + '"]').attr("checked", p), n.push(l) } else { p = !1; r.find('input.ld-propanel-report-checkbox[data-user-id="' + l + '"]').attr("checked", p), n.splice(e.inArray(l, n), 1) } if (n.length) { var i = []; e.each(n, function (r, t) { -1 === e.inArray(t, i) && i.push(t) }), n = i } } e(document).trigger("proPanel.setSelectedUsers") } } function s(t) { if (void 0 !== t) { var a = jQuery(t.currentTarget).prop("checked"); r.find("tbody input.ld-propanel-report-checkbox").each(function (r, t) { e(t).attr("checked", a).trigger("change") }) } } function g() { r.find("tbody input.ld-propanel-report-checkbox").length ? (r.find("thead input.ld-propanel-report-checkbox").show(), r.find("tbody input.ld-propanel-report-checkbox:checkbox:not(:checked)").length ? r.find("thead input.ld-propanel-report-checkbox").attr("checked", !1) : r.find("thead input.ld-propanel-report-checkbox").attr("checked", !0)) : r.find("thead input.ld-propanel-report-checkbox").hide() } function c() { "user" == o.type && (n = []).push(e(".user.select2").val()), "course" != o.type && "group" != o.type || n.length && e.each(n, function (e, t) { r.find('input.ld-propanel-report-checkbox[data-user-id="' + t + '"]').attr("checked", !0) }) } function u() { void 0 !== a.reporting && (void 0 !== a.activity ? jQuery("p.download-button-wrap", a.reporting).hide() : jQuery("p.download-button-wrap", a.reporting).show()) } function f() { void 0 !== o.reporting_pager.total_items && parseInt(o.reporting_pager.total_items) > 0 ? (e(".email .no-results").hide(), e(".email .results").show()) : (e(".email .no-results").show(), e(".email .results").hide()) } function _() { if ("user" == o.type) e("a.email-toggle").find("span.count").html(""); else { var r = 0; n.length && (r = n.length), r > 0 ? e("a.email-toggle").find("span.count").html(" (" + r + ")") : e("a.email-toggle").find("span.count").html("") } } function h() { var r, t, l, p, i, d; if (void 0 !== a.filtering) { if (t = (r = e("#email", a.filtering)).find(".subject").val(), l = r.find(".message").val(), !n) return; p = r.find(".sending"), i = r.find(".sent"), d = r.find("#propanel-send-email"), p.show(), d.prop("disabled", !0), e.when(e.ajax({ url: ld_propanel_settings.ajaxurl, method: "post", dataType: "json", data: { action: "learndash_propanel_email_users", user_ids: n.join(), subject: t, message: l, filters: o, nonce: ld_propanel_settings.nonce, is_debug: ld_propanel_settings.is_debug, lang: ld_propanel_settings.lang } })).done(function (e) { e.success ? (void 0 !== e.data.message && "" != e.data.message && i.html(e.data.message), i.fadeIn(), p.hide(), void 0 !== e.data.debug && "" !== e.data.debug && ld_propanel_settings.is_debug && alert(e.data.debug), setTimeout(function () { i.fadeOut(), i.html(""), d.prop("disabled", !1) }, 3e3)) : alert(e.data.message) }) } } function v() { void 0 !== a.filtering && (emailContainer = e("#email", a.filtering), emailContainer.find(".subject").val(""), emailContainer.find(".message").val(""), e("#propanel-send-email").prop("disabled", !0), e("#propanel-reset-email").prop("disabled", !0)) } function m() { e(document.activeElement).hasClass("course-status") || void 0 !== a.activity && l(a.activity, "activity_rows") } function b(r) { r.preventDefault(), template_args = {}; var t = e(this); template_args.paged = t.attr("data-page"), void 0 !== a.activity && l(a.activity, "activity_rows", template_args) } function y(r) { e(document.activeElement).hasClass("course-status") || (void 0 !== a["progress-chart"] && l(a["progress-chart"], "progress-chart-data"), e.when(e.ajax({ url: ld_propanel_settings.ajaxurl, method: "get", dataType: "json", data: { action: "learndash_propanel_get_progress_charts_data", filters: o, nonce: ld_propanel_settings.nonce, lang: ld_propanel_settings.lang } })).done(function (e) { e && e.hasOwnProperty("success") && function (e) { void 0 !== e.all_progress && function (e) { "undefined" != typeof proPanelProgressAllChart && proPanelProgressAllChart.destroy(); if (void 0 !== e.data && void 0 !== e.data.datasets && e.data.datasets.length > 0) { jQuery("#proPanelProgressAllDefaultMessage").hide(); var r = document.getElementById("proPanelProgressAll").getContext("2d"); if (void 0 !== r) { var t = { labels: [], datasets: [] }; void 0 !== e.data.labels && (t.labels = e.data.labels), void 0 !== e.data.datasets && (t.datasets = e.data.datasets); var a = {}; void 0 !== e.options && (a = e.options), window.proPanelProgressAllChart = new Chart(r, { type: "doughnut", data: t, options: a }) } } else jQuery("#proPanelProgressAllDefaultMessage").show(), jQuery("#proPanelProgressAll").hide(), jQuery("#proPanelProgressAll").css("height", "0"), jQuery("#proPanelProgressAll").css("width", "0") }(e.all_progress); void 0 !== e.all_percentages && function (e) { "undefined" != typeof proPanelProgressAllPercentagesChart && proPanelProgressAllPercentagesChart.destroy(); if (void 0 !== e.data.datasets && e.data.datasets.length > 0) { jQuery("#proPanelProgressInMotionDefaultMessage").hide(); var r = document.getElementById("proPanelProgressInMotion").getContext("2d"); if (void 0 !== r) { var t = { labels: [], datasets: [] }; void 0 !== e.data.labels && (t.labels = e.data.labels), void 0 !== e.data.datasets && (t.datasets = e.data.datasets); var a = {}; void 0 !== e.options && (a = e.options), window.proPanelProgressAllPercentagesChart = new Chart(r, { type: "doughnut", data: t, options: a }) } } else jQuery("#proPanelProgressInMotionDefaultMessage").show(), jQuery("#proPanelProgressInMotion").hide(), jQuery("#proPanelProgressInMotion").css("height", "0"), jQuery("#proPanelProgressInMotion").css("width", "0") }(e.all_percentages) }(e.data) })) } function w(r) { r.stopImmediatePropagation(); var t = e(r.target).attr("data-template"), a = e(r.target).attr("data-slug"), n = e(r.target).attr("data-nonce"), l = r.target; void 0 !== t && (jQuery(r.target).prop("disabled", !0), x(t, { init: 1, nonce: n, slug: a, filters: o }, l)) } function k(r) { if (void 0 !== r && r.stopImmediatePropagation(), n = [], _(), void 0 !== a.reporting && (jQuery('.filter-selection.filter-section-date input[name="filter-date-start"]').length ? o.time_start = jQuery('.filter-selection.filter-section-date input[name="filter-date-start"]').val() : o.time_start = "", jQuery('.filter-selection.filter-section-date input[name="filter-date-end"]').length ? o.time_end = jQuery('.filter-selection.filter-section-date input[name="filter-date-end"]').val() : o.time_end = ""), "" !== o.groups ? (o.type = "group", o.id = o.groups) : "" !== o.users ? (o.type = "user", o.id = o.users) : "" !== o.course && (o.type = "course", o.id = o.courses), void 0 !== a.reporting) { var t = e(".propanel-reporting", a.reporting); "group" == o.type ? l(t, "group-reporting") : "course" == o.type ? l(t, "course-reporting") : "user" == o.type && l(t, "user-reporting") } o.reporting_pager.current_page = 1, e(document).trigger("proPanel.filterChanged") } function j(r) { o.reporting_pager.current_page = parseInt(o.reporting_pager.current_page), o.reporting_pager.total_pages = parseInt(o.reporting_pager.total_pages); var t = r.currentTarget, a = !1; e(t).hasClass("next") ? o.reporting_pager.current_page < o.reporting_pager.total_pages && (a = !0, o.reporting_pager.current_page = o.reporting_pager.current_page + 1) : e(t).hasClass("prev") ? o.reporting_pager.current_page > 1 && (a = !0, o.reporting_pager.current_page = o.reporting_pager.current_page - 1) : e(t).hasClass("first") ? o.reporting_pager.current_page > 1 && (a = !0, o.reporting_pager.current_page = 1) : e(t).hasClass("last") && o.reporting_pager.current_page < o.reporting_pager.total_pages && (a = !0, o.reporting_pager.current_page = o.reporting_pager.total_pages), 1 == a && p() } function P(e) { e.stopImmediatePropagation(), window.location.reload(!1) } function Q(r) { r.stopImmediatePropagation(); var t = e(r.target).attr("data-template"), a = e(r.target).attr("data-slug"), n = e(r.target).attr("data-nonce"), l = r.target; if (!jQuery("#dashboard-widgets").length) { var p = e(r.currentTarget).parents("div.learndash-propanel-activity"); if (void 0 !== p) { var i = e(p).data("filters"); void 0 !== i && "" != i && (o = i) } } void 0 !== t && (jQuery(l).prop("disabled", !0), x(t, { init: 1, nonce: n, slug: a, filters: o }, l)) } function x(r, t, a) { e.when(e.ajax({ url: ld_propanel_settings.ajaxurl, method: "get", dataType: "json", data: { action: "learndash_propanel_template", template: r, args: t, nonce: ld_propanel_settings.nonce, lang: ld_propanel_settings.lang } })).done(function (t) { if (void 0 !== t && void 0 !== t.data.output.rows_html) { var o = t.data.output.rows_html; e(window).trigger("resize"); var n = 0; void 0 !== o.data.total_count && (n = parseInt(o.data.total_count)); var l = 0; if (void 0 !== o.data.result_count && (l = parseInt(o.data.result_count)), l < n) { if (void 0 !== a && jQuery(a).length && void 0 !== o.data.progress_percent) { var p = parseInt(o.data.progress_percent); jQuery("span.status", a).html(" " + p + "%") } x(r, o.data, a) } else jQuery(a).prop("disabled", !1), jQuery("span.status", a).html(""), void 0 !== o.data.report_download_link && "" != o.data.report_download_link && (window.location.href = o.data.report_download_link) } }) } function C() { if (void 0 !== a.reporting && jQuery("input.tablesorter-search", a.reporting).length) { var e, r = ""; jQuery("input.tablesorter-search", a.reporting).focus(function () { var t = this; r = jQuery(t).val(), "" != e && clearInterval(e), e = setInterval(function () { "" == (r = jQuery(t).val()) && r != o.search ? (o.search = r, o.current_page = 1, p()) : (r.length >= 3 && r != o.search && (o.search = r, o.current_page = 1, p()), jQuery("input.tablesorter-search", a.reporting).is(":focus") || clearInterval(e)) }, 200) }) } } !function () { var n = function (e) { for (var r, t = {}, a = window.location.href.slice(window.location.href.indexOf("?") + 1).split("&"), o = 0; o < a.length; o++)r = a[o].split("="), t[r[0]] = r[1]; if (void 0 !== t[e]) return t[e] }("LD_DEBUG"); void 0 !== n && "" != n && (ld_propanel_settings.is_debug = n); e(window).resize(function () { if (void 0 !== a.reporting) { var r = a.reporting.width(); r < 350 ? (a.reporting.find(".ld-propanel-reporting-pager-info").addClass("ld-propanel-full-width"), a.reporting.find(".search-wrap").addClass("ld-propanel-full-width")) : (a.reporting.find(".ld-propanel-reporting-pager-info").removeClass("ld-propanel-full-width"), a.reporting.find(".search-wrap").removeClass("ld-propanel-full-width")), a.reporting.find("table.ld-propanel-reporting-table-groups-widget").length && (r < 350 ? a.reporting.find("table tbody td.ld-propanel-reporting-col-course").length && a.reporting.find("td.ld-propanel-reporting-col-progress").length && (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").length ? a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").show() : a.reporting.find("table tbody tr").each(function () { var r = e(this); if (!e(r).find("td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").length && e(r).find("td.ld-propanel-reporting-col-progress").length) { var t = e(r).find("td.ld-propanel-reporting-col-progress").html(); void 0 !== t && (e(r).find("td.ld-propanel-reporting-col-course").append('<div class="ld-propanel-reporting-col-progress" style="display:none; margin-top: 20px;">' + t + "</div>"), e(r).find("td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").show()) } })) : (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").hide())), a.reporting.find("table.ld-propanel-reporting-table-courses-widget").length && (r < 350 ? a.reporting.find("table tbody td.ld-propanel-reporting-col-user").length && a.reporting.find("td.ld-propanel-reporting-col-progress").length && (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-user div.ld-propanel-reporting-col-progress").length ? a.reporting.find("table tbody td.ld-propanel-reporting-col-user div.ld-propanel-reporting-col-progress").show() : a.reporting.find("table tbody tr").each(function () { var r = e(this); if (!e(r).find("td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").length && e(r).find("td.ld-propanel-reporting-col-progress").length) { var t = e(r).find("td.ld-propanel-reporting-col-progress").html(); void 0 !== t && (e(r).find("td.ld-propanel-reporting-col-user").append('<div class="ld-propanel-reporting-col-progress" style="display:none; margin-top: 20px;">' + t + "</div>"), e(r).find("td.ld-propanel-reporting-col-user div.ld-propanel-reporting-col-progress").show()) } })) : (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-user div.ld-propanel-reporting-col-progress").hide())), a.reporting.find("table.ld-propanel-reporting-table-users-widget").length && (r < 350 ? a.reporting.find("table tbody td.ld-propanel-reporting-col-course").length && a.reporting.find("td.ld-propanel-reporting-col-progress").length && (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").hide(), a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").length ? a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").show() : a.reporting.find("table tbody tr").each(function () { var r = e(this); if (!e(r).find("td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").length && e(r).find("td.ld-propanel-reporting-col-progress").length) { var t = e(r).find("td.ld-propanel-reporting-col-progress").html(); void 0 !== t && (e(r).find("td.ld-propanel-reporting-col-course").append('<div class="ld-propanel-reporting-col-progress" style="display:none; margin-top: 20px;">' + t + "</div>"), e(r).find("td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").show()) } })) : (a.reporting.find("table thead th.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-progress").show(), a.reporting.find("table tbody td.ld-propanel-reporting-col-course div.ld-propanel-reporting-col-progress").hide())) } if (void 0 !== a.activity) { var r = a.activity.width(); r < 350 ? (a.activity.find(".report-pagination").addClass("ld-propanel-full-width"), a.activity.find(".report-exports").addClass("ld-propanel-full-width")) : (a.activity.find(".report-pagination").removeClass("ld-propanel-full-width"), a.activity.find(".report-exports").removeClass("ld-propanel-full-width")) } }), e(document).trigger("resize"), e(document).trigger("proPanel.loadWidgets"), e(document).on("proPanel.templateLoaded", function (t, n) { "filtering" == n && (a.filtering.on("click tap", ".section-toggle", function () { var r = e(this).attr("href"); return e(this).toggleClass("active").siblings().removeClass("active"), e("" + r).toggleClass("display").siblings().removeClass("display"), !1 }), e("select#ld-propanel-pagesize").length && (void 0 === o.reporting_pager && (o.reporting_pager = []), o.reporting_pager.per_page = jQuery("select#ld-propanel-pagesize option:checked").val(), void 0 === o.reporting_pager.per_page && (o.reporting_pager.per_page = e("select#ld-propanel-pagesize").find("option:first-child").val()), void 0 === o.reporting_pager.current_page && (o.reporting_pager.current_page = 1), e(document).on("change", "select#ld-propanel-pagesize", function () { o.reporting_pager.per_page = e(this).val() })), e(".filter-selection select", a.filtering).each(function () { var r = e(this), t = e(r).parent(".filter-selection"), a = e(t).data("filter-key"); void 0 !== a && "" != a && e(r).select2({ theme: "ld_propanel", dir: window.isRtl ? "rtl" : "", ajax: i(a), containerCssClass: "filter-" + a + "-select2" }), e(r).change(function () { e(this); var r = e(this).val(); null == r && (e(this).val(""), r = ""); var t = e(this).parent(".filter-selection"), a = e(t).data("filter-key"); void 0 !== a && "" != a && (o[a] = r) }) }), void 0 !== ld_propanel_settings.flatpickr_locale.months && (void 0 !== ld_propanel_settings.flatpickr_locale.months.longhand && (flatpickr.l10ns.default.months.longhand = ld_propanel_settings.flatpickr_locale.months.longhand), void 0 !== ld_propanel_settings.flatpickr_locale.months.shorthand && (flatpickr.l10ns.default.months.shorthand = ld_propanel_settings.flatpickr_locale.months.shorthand)), void 0 !== ld_propanel_settings.flatpickr_locale.weekdays && (void 0 !== ld_propanel_settings.flatpickr_locale.weekdays.longhand && (flatpickr.l10ns.default.weekdays.longhand = ld_propanel_settings.flatpickr_locale.weekdays.longhand), void 0 !== ld_propanel_settings.flatpickr_locale.weekdays.shorthand && (flatpickr.l10ns.default.weekdays.shorthand = ld_propanel_settings.flatpickr_locale.weekdays.shorthand)), void 0 !== ld_propanel_settings.flatpickr_locale.time_24hr && (ld_propanel_settings.flatpickr_locale.time_24hr ? flatpickr.l10ns.default.time_24hr = !0 : flatpickr.l10ns.default.time_24hr = !1), void 0 !== ld_propanel_settings.flatpickr_locale.hourAriaLabel && (flatpickr.l10ns.default.hourAriaLabel = ld_propanel_settings.flatpickr_locale.hourAriaLabel), void 0 !== ld_propanel_settings.flatpickr_locale.minuteAriaLabel && (flatpickr.l10ns.default.minuteAriaLabel = ld_propanel_settings.flatpickr_locale.minuteAriaLabel), void 0 !== ld_propanel_settings.flatpickr_locale.monthAriaLabel && (flatpickr.l10ns.default.monthAriaLabel = ld_propanel_settings.flatpickr_locale.monthAriaLabel), void 0 !== ld_propanel_settings.flatpickr_locale.rangeSeparator && (flatpickr.l10ns.default.rangeSeparator = ld_propanel_settings.flatpickr_locale.rangeSeparator), void 0 !== ld_propanel_settings.flatpickr_locale.scrollTitle && (flatpickr.l10ns.default.scrollTitle = ld_propanel_settings.flatpickr_locale.scrollTitle), void 0 !== ld_propanel_settings.flatpickr_locale.toggleTitle && (flatpickr.l10ns.default.toggleTitle = ld_propanel_settings.flatpickr_locale.toggleTitle), void 0 !== ld_propanel_settings.flatpickr_locale.weekAbbreviation && (flatpickr.l10ns.default.weekAbbreviation = ld_propanel_settings.flatpickr_locale.weekAbbreviation), void 0 !== ld_propanel_settings.flatpickr_locale.yearAriaLabel && (flatpickr.l10ns.default.yearAriaLabel = ld_propanel_settings.flatpickr_locale.yearAriaLabel), flatpickr(".filter-selection.filter-section-date .ld_filter_section_date", { allowInput: !1, enableTime: !0, dateFormat: "Y-m-d H:i:s", altInput: !0, altFormat: ld_propanel_settings.flatpickr_date_time_format, maxDate: (new Date).fp_incr(1) }), void 0 !== a.filtering && e("#email", a.filtering).on("keyup", ".subject, .message", function () { var r = e("#email .subject", a.filtering).val(), t = e("#email .message", a.filtering).val(), o = e("#propanel-send-email"), n = e("#propanel-reset-email"); "" == r || "" == t ? (o.prop("disabled", !0), n.prop("disabled", !0)) : (o.prop("disabled", !1), n.prop("disabled", !1)) }), f(), a.filtering.on("click", "button.filter", k), a.filtering.on("click tap", "#propanel-send-email", h), a.filtering.on("click tap", "#propanel-reset-email", v), a.filtering.on("click", "button.reset", P)), "reporting" == n && (e(document).on("proPanel.setSelectedUsers", _), e(document).on("proPanel.setSelectedUsers", g), e(document).on("click", ".ld-propanel-widget-reporting .ld-propanel-reporting-pager-info button", j), e(document).on("click", ".ld-propanel-widget-reporting button.reporting-download", w)), "course-reporting" == n ? (p(), c(), u(), r.on("change", "tbody input.ld-propanel-report-checkbox:checkbox", d), r.on("change", "thead input.ld-propanel-report-checkbox:checkbox", s), e(document).on("proPanel.reportingTableUpdated", c), e(document).on("proPanel.reportingTableUpdated", g), e(document).on("proPanel.reportingTableUpdated", C)) : "user-reporting" == n ? (p(), c(), u(), e(document).on("proPanel.reportingTableUpdated", c), e(document).on("proPanel.reportingTableUpdated", C)) : "group-reporting" == n && (p(), c(), u(), r.on("change", "tbody input.ld-propanel-report-checkbox:checkbox", d), r.on("change", "thead input.ld-propanel-report-checkbox:checkbox", s), e(document).on("proPanel.reportingTableUpdated", c), e(document).on("proPanel.reportingTableUpdated", g), e(document).on("proPanel.reportingTableUpdated", C)), "activity" == n && e(document).on("proPanel.filterChanged", m), "activity_rows" != n && "activity" != n || (e(".report-pagination .ld-propanel-reporting-pager-info > button", a.activity).on("click", b), e(document).on("click", "button.download-activity", Q)), "progress-chart" == n && e(document).on("proPanel.filterChanged", y) }), x = e(".ld-propanel-widget"), e.each(x, function () { var r = e(this).data("ld-widget-type"); a[r] = e(this) }), e.each(a, function () { var r = e(this).data("ld-widget-type"); if (void 0 === a.filtering) { var t = e(this).data("filters"); if (void 0 !== t && "" != t) for (var n in o) void 0 !== t[n] && "" != t[n] && ("reporting_pager" == n ? void 0 === a.filtering && (o[n] = t[n]) : o[n] = t[n]) } l(a[r], r) }), Object.keys(a).length && void 0 === o.reporting_pager.per_page && (o.reporting_pager.per_page = ld_propanel_settings.default_per_page, o.reporting_pager.current_page = 1), "" != t && null != t || (t = e("#learndash-propanel-reporting").length && e("#learndash-propanel-reporting").hasClass("single-view") ? "full" : "widget"), void 0 === a.filtering && void 0 !== o && (void 0 !== a.reporting && ("" != o.id && "" != o.type || delete a.reporting), void 0 !== a["progress-chart"] && ("" != o.id && "" != o.type || delete a["progress-chart"], e(document).on("proPanel.filterChanged", y)), setTimeout(function () { k() }, ld_propanel_settings.template_load_delay)); var x }() }); jQuery(document).ready(function () { jQuery(".ld-propanel-widget-activity").on("click", "a.user_statistic", function (e) { e.preventDefault(); var r = jQuery(this).data("ref_id"), t = jQuery(this).data("quiz_id"), a = jQuery(this).data("user_id"), o = jQuery(this).data("statistic_nonce"), n = { action: "wp_pro_quiz_admin_ajax_statistic_load_user", func: "statisticLoadUser", data: { quizId: t, userId: a, refId: r, statistic_nonce: o, avg: 0, lang: ld_propanel_settings.lang } }; jQuery("#wpProQuiz_user_overlay, #wpProQuiz_loadUserData").show(); var l = jQuery("#wpProQuiz_user_content").hide(); jQuery.when(jQuery.ajax({ type: "POST", url: ld_propanel_settings.ajaxurl, dataType: "json", cache: !1, data: n })).done(function (e) { void 0 !== e.html && (l.html(e.html), jQuery("a.wpProQuiz_update", l).remove(), jQuery("a#wpProQuiz_resetUserStatistic", l).remove(), jQuery("#wpProQuiz_user_content").show(), jQuery("body").trigger("learndash-statistics-contentchanged"), jQuery("#wpProQuiz_loadUserData").hide(), l.find(".statistic_data").click(function () { return jQuery(this).parents("tr").next().toggle("fast"), !1 })) }), jQuery("#wpProQuiz_overlay_close").click(function () { jQuery("#wpProQuiz_user_overlay").hide() }) }) });